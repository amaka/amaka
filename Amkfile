<?php

use Officine\Amaka\Task\Ext\Test;
use Officine\Amaka\Task\Ext\Watch;

use Officine\Amaka\FailedBuildException;

return array(
    /**
       The ':default' task is executed each time amaka is called
       without specifying a task.

       This task will run the 'Test' task once
     */
    $amaka->task(':default')->dependsOn('Test'),

    /**
       Watch a directory for changes using the 'inotifywait' command
     */
    $amaka->task(':develop')->dependsOn('Watch'),

    /**
     */
    $amaka->task(':build', function($spawner, $directories) {
        $directories->createIfNotExists('build');

        $captureCommandInto = function($command, $into) use ($spawner) {
            $report = fopen("build/{$into}", 'w+');
            $process = $spawner->spawn($command);
            $process(function($output) use ($command, $report) {
                echo "Using ({$command})\n";
                echo $output;
                fwrite($report, $output);
                fclose($report);
            });
        };

        $captureCommandInto('phploc src', 'phploc.log');
        $captureCommandInto('phpcdp --min-tokens 12 src', 'duplication.log');
        $captureCommandInto('apigen --source src/ --destination build/docs --report build/checkstyle.log', 'apigen.log');
    })->dependsOn('Test', ':spec', ':clean'),

    $amaka->task(':clean', function($directories) {
        $directories->removeIfExists('build');
    }),

    /**
     */
    $amaka->task(':dist')->dependsOn(':build'),

    /**
     */
    $amaka->task(':spec', function($spawner) {
        $process = $spawner->spawn("vendor/bin/behat -f progress");
        $process(function() {
            // pass silently
        }, function($error) {
            // make the build fail
            throw new FailedBuildException("Some specifications have failed: '{$error}'");
        }, function($progress) {
            // show progress from the command
            echo $progress;
        });
    }),

    /**
     */
    $amaka->task('Watch', function($self, $taskArgs) {
        $args = $taskArgs->getRemainingArgs();
        $directory = end($args);

        if (! $directory) {
            $directory = "tests";
        }
        $self->setWatchedDirectory($directory);
    }),

    /**
     */
    $amaka->task('Test', function($self) {
        $self->setTestDirectory('tests');
    }),
);
